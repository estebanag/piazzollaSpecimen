
.margins {
    margin: auto;
    max-width: $width;
    padding: 0 $grid-gap/2;
}

// GRID
// ---------------------------------------------------------------------------

.is-row {
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;

    margin-left: -$grid-gap;

    &.is-gapless,
    &.is-gapless > .is-row {
        margin-left: 0;
        margin-top: 0;
    }

    & + .is-row {
        margin-top: $grid-margin;
    }
    &.is-bricks {
        & > .is-col {
            margin-bottom: $grid-margin;
        }
    }
    & > .is-col {
        flex: 1;
        margin-left: $grid-gap;

        @for $i from 1 through $columns {
            &.is-#{$i} {
                min-width: calc(#{100% / $columns * $i} - #{$grid-gap});
            }
            &.is-offset-#{$i} {
                margin-left: calc(#{100% / $columns * $i} + #{$grid-gap});
            }
        }
    }

    &.is-gapless > .is-col {
        margin-left: 0;
    }
}

// Offset
[class^="is-offset-"],
[class*=" is-offset-"] {
    @include mobile() {
        margin-left: 0;
    }
}

@include mobile() {
    .is-row:not(.is-mobile) {
        flex-direction: column;
        flex-wrap: nowrap;
        margin-left: 0;
        margin-top: 0;

        & + .is-row {
            margin-top: 0;
        }
        & > .is-col {
            flex: 0 0 100%;
            width: 100% !important;
            max-width: 100% !important;
            margin-left: 0;
            margin-bottom: $grid-margin;
        }
        &.is-bricks {
            & > .is-col {
                margin-bottom: $grid-margin;
            }
        }
        &.is-gapless {
            margin-bottom: $grid-margin;
        }
        &.is-gapless > .is-col {
            margin-bottom: 0;
        }
    }
}
